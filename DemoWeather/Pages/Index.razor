@page "/"
@inject IJSRuntime jsRuntime
@using System.Net.Http
@using Flurl
@using Flurl.Http
@using DemoWeather.Models


<div id="map"></div>

<h2 style="margin-top: 20px;">@weatherData?.city.name</h2>


<div id="chart-container">
    <canvas id="chart"></canvas>
</div>



@code{


    public WeatherModel weatherData { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var handler = DotNetObjectReference.Create(this);
            await jsRuntime.InvokeVoidAsync("loadMap", handler);
        }


    }



    [JSInvokable]
    public async Task GetWeatherDataAsync(float lat, float lng)
    {
        var apiKey = "";
        using (var http = new HttpClient())
        {
            var req = $"https://api.openweathermap.org/data/2.5/forecast/daily?lat={lat}&lon={lng}&cnt={7}&appid={apiKey}";
            weatherData = await req.GetJsonAsync<WeatherModel>();
            StateHasChanged();
            await DrawBars();
        }
    }

    public async Task DrawBars()
    {
        var temps = weatherData.list
            .Select(x => x.temp.day - 273)
            .Select(x => Math.Round(x))
            .ToList();

        var dates = temps.Select((x, i) => DateTime.Today.AddDays(i).ToString("dd/MM/yyyy")).ToList();

        await jsRuntime.InvokeVoidAsync("drawChart", temps, dates);
    }


}